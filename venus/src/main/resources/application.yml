spring:
  profiles:
    active: dev

  application:
    name: venus

  # PostgreSQL Database Configuration
  datasource:
    url: jdbc:postgresql://localhost:5432/slotizen-db
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:root}
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 20000
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000
      max-lifetime: 1200000

  # JPA/Hibernate Configuration
  jpa:
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        jdbc:
          time_zone: UTC

  # Liquibase Configuration
  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.yaml
    enabled: true

  # Mail Configuration
  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME:your-email@gmail.com}
    password: ${MAIL_PASSWORD:your-app-password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 3000
          writetimeout: 5000

  # Multipart file configuration
  servlet:
    multipart:
      max-file-size: 2MB
      max-request-size: 2MB

server:
  port: 8081
  servlet:
    context-path: /api

logging:
  level:
    org.springframework.orm.jpa: DEBUG
    org.springframework.transaction: TRACE
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

# Default JWT configuration with environment variable fallback
jwt:
 secret: ${JWT_SECRET:u8Jk2n4pQwErTyUiOpAsDfGhJkLzXcVb12345678}
 access-token-expiration-ms: ${JWT_ACCESS_TOKEN_EXPIRATION_MS:3600000} # 1 hour
 refresh-token-expiration-ms: ${JWT_REFRESH_TOKEN_EXPIRATION_MS:604800000} # 7 days

# CORS Configuration
cors:
  allowed-origins: "http://localhost:8080,https://your-react-frontend.com"
  allowed-methods: "GET,POST,PUT,DELETE,OPTIONS"
  allowed-headers: "Authorization,Content-Type,Cache-Control"
  allow-credentials: true

app:
  storage:
    max-size-bytes: 2097152
    allowed-content-types:
      - image/png
      - image/jpeg
      - image/jpg
      - image/webp
      - image/gif
storage.local.base-dir: ./uploads